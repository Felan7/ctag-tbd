#include <atomic>
#include "ctagSoundProcessor.hpp"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessortemplate : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &) override;
            ctagSoundProcessortemplate();
            virtual ~ctagSoundProcessortemplate();

        private:
            virtual void knowYourself() override;

            // private attributes could go here
            // autogenerated code here
            // sectionHpp
	atomic<int32_t> beatA_stop, trig_beatA_stop;
	atomic<int32_t> beatA_reset_on_stop, trig_beatA_reset_on_stop;
	atomic<int32_t> beatB_stop, trig_beatB_stop;
	atomic<int32_t> beatB_reset_on_stop, trig_beatB_reset_on_stop;
	atomic<int32_t> beatA_backwards, trig_beatA_backwards;
	atomic<int32_t> beatB_backwards, trig_beatB_backwards;
	atomic<int32_t> beatA_select, cv_beatA_select;
	atomic<int32_t> beatB_select, cv_beatB_select;
	atomic<int32_t> beatA_pitch, cv_beatA_pitch;
	atomic<int32_t> beatB_pitch, cv_beatB_pitch;
	atomic<int32_t> xFadeA_B, cv_xFadeA_B;
	// sectionHpp
        };
    }
}